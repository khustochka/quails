-# frozen_string_literal: true
- @body_class = 'wider'

- @robots = 'NOINDEX'

- @page_title = capture do
  - if params[:month] && params[:day]
    - month_finder = russian_locale? ? "common_month_names" : "month_names"
    = [ t('lifelist.title.daylist', day: params[:day], month: t("date.#{month_finder}")[params[:month].to_i]),
        params[:year] ? t('lifelist.title.yearsublist', year: params[:year]) : nil,
        params[:locus] ? "(#{@lifelist.locus.name})" : nil ] * ' '
  - elsif params[:month]
    = [ t('lifelist.title.monthlist', month: t('date.month_names')[params[:month].to_i]),
        params[:year] ? t('lifelist.title.yearsublist', year: params[:year]) : nil,
        params[:locus] ? "(#{@lifelist.locus.name})" : nil ] * ' '
  - elsif params[:year]
    = [t('lifelist.title.yearlist', year: params[:year]), params[:locus] ? "(#{@lifelist.locus.name})" : nil] * ' '
  - elsif params[:locus]
    = t('lifelist.title.locationlist', location: @lifelist.locus.name)
  - else
    = t('lifelist.title.lifelist')
  - if params[:motorless]
    = " - Motorless"
  - if params[:seen]
    = " - Only seen"

- content_for :translated do
  = render partial: 'partials/translated', locals: {url: significant_params}

-# Do not cache too many pages
- do_not_cache = params[:month] && (params[:locus] || params[:sort] || params[:year])
- cache_unless do_not_cache, significant_params.merge(admin: current_user.admin?, key: CacheKey.lifelist, locale: I18n.locale) do

  %h1= page_header

  %div{data: {turbolinks: "true"}}

    = render "lifelist/menus"

    %ul.horiz-list.filter-list
      %strong= t('lifelist.menus.filter.months')
      %li= filtering_link_to_all(:month)
      - 1.upto(12) do |m|
        %li
          = link_to_or_span(t('date.abbr_month_names')[m], significant_params.except(:day).merge(:month => m))

  - if @lifelist.blank?
    %p= t('lifelist.basic.no_species')
  - else
    %table#lifelist.neat_table.advanced
      %thead{data: {turbolinks: "true"}}
        %tr
          %th.empty_cell &nbsp;
          %th
            %i.sort_by_label= t('lifelist.basic.filter.sort_by')
            = sorting_link_to(:class, "Taxonomy")
          %th.align-center
            = sorting_link_to(nil, "First seen")
          %th.align-center
            = sorting_link_to(:last, "Last seen")
          %th.count-column-header
            = sorting_link_to(:count, "Count")
      %tbody
        = render sorted_list_partial(params[:sort])
