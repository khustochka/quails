- stylesheet 'forms'
- javascript 'image_form'

- @page_title = "#{new_or_edit_label(@image)} image"

%h1= page_header

- if @image.persisted?
  - provide :add_shortcuts do
    %li= link_to @image.mapped? ? 'Edit map' : '<b>MAP IT!</b>'.html_safe, action: :map_edit
    %li
      = link_to(flickr_photo_path(@image)) do
        - if @image.on_flickr?
          Edit flickr data
        - else
          %b Link to flickr!

= render 'admin/shortcuts' if current_user.admin?

%p
  - if @image.on_flickr?

    - if @flickr_id_in_use
      %span.errors
        The
        = link_to "flickr photo", @photo.page_url
        is already linked to the
        = link_to "image", @flickr_id_in_use
    - else
      This image is
      %b= link_to "linked to flickr photo", @photo.page_url

  - elsif @image.persisted?
    This image is not linked to flickr photo.

  = link_to('Edit flickr link', flickr_photo_path(@image)) if @image.persisted?

- if @image.persisted?
  - if @image.children.any?
    %p
      This image has #{@image.children.count} children.
      = link_to("Detach", parent_image_path(@image), method: "POST")

  - else
    %p
      - if @image.parent_id
        This image has a parent.
        = link_to("Detach", parent_image_path(@image), method: "POST")
      = link_to("Add/Edit parent", edit_parent_image_path(@image))

- if @image.persisted?
  %p= image_tag(thumbnail_item(@image).try(:full_url), class: 'image_pic')

- if flash[:alert]
  %div.errors= flash[:alert]

= render @image.errors.extend(GenericErrors)

= simple_form_for @image, html: {class: 'image'} do |form|

  %div
    = form.input :slug
    = form.input :title
    = form.input :has_old_thumbnail

  %table.with_search
    %tr
      %td.observation_search{colspan: 2}
        = simple_fields_for @image.search_applicable_observations do |form2|
          = form2.input :observ_date, label: 'Date:', as: :string,
              input_html: {class: 'short', maxlength: 10, type: 'date'}, required: false
          = form2.input :locus_id, label: 'Location:', collection: Locus.suggestion_order,
              input_html: {class: 'suggest-combo'}, required: false
          = form2.input :species_id, label: 'Species:', collection: species_for_select,
              input_html: {class: 'suggest-combo'}, required: false
          %input#obs_limit{type: 'hidden', name: 'limit', value: 5}
          %button.obs_search_btn{type: 'button'} Search
    %tr
      %td.observation_list
        %h5 Current observations
        - unless @image.new_record?
          %span.restore.pseudolink Restore original
        %ul.obs-list.current-obs
          = render partial: 'observations/obs_item', collection: @image.observations.preload(:species, :card => :locus)
      %td.observation_options
        %h5 Found observations
        %ul.obs-list.found-obs

  %div
    - unless @image.persisted?
      = form.input :flickr_id, as: :hidden
      = hidden_field_tag(:new_on_flickr, "true") if params[:new_on_flickr]
    = form.input :description, input_html: {rows: 7, class: 'wiki_field'}
    = form.input :index_num, input_html: { size: 10, type: :text }
    = form.input :status, collection: Image::STATES, input_html: {size: '3'}, include_blank: false
  .buttons
    = default_submit_button(form)

- if @image.persisted?
  %p= default_destroy_button
