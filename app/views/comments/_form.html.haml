-# frozen_string_literal: true
= simple_form_for @comment, remote: (action_name != 'reply'), html: {class: 'comment'} do |form|

  = render partial: "comments/errors", object: @comment.errors

  = form.input :post_id, as: :hidden
  = form.input :parent_id, as: :hidden
  = form.input :name, @comment.persisted? ? {} : {input_html: { value: '' }, required: false, hint: 'Не заполняйте это поле!'}
  - if @comment.persisted?
    = form.input :url
  - else
    %div.input.string.required.comment_nmaee<
      %label.string.required{for: CommentsHelper::REAL_NAME_FIELD}= t('simple_form.labels.comment.name')
      = text_field_tag CommentsHelper::REAL_NAME_FIELD, @comment.name, required: true, class: 'string required'

  = simple_fields_for @comment.commenter || Commenter.new do |f2|
    = f2.input :email, label: 'Email:',
                hint: @comment.persisted? ? nil : t('posts.post.if_you_wish_to_receive_notification')

  = form.input :body, label: false, input_html: {rows: 10, class: 'wiki_field'},
                hint: t('posts.post.some_html_allowed')

  - if @comment.persisted?
    = form.input :send_email, label: 'Send email?'
    = form.input :approved, label: 'Approved'
    %b= @comment.ip
  .buttons
    = default_submit_button(form, data: {disable_with: 'Sending...'})
