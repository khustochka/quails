-# frozen_string_literal: true
- @page_title = 'Environment'

%h1= page_title

%table.neat_table
  %tbody
    %tr
      %th Ruby version
      %td= RUBY_DESCRIPTION

    %tr
      %th Rubygems version
      %td= Gem::VERSION

    %tr
      %th Bundler version
      %td= Bundler::VERSION

    %tr
      %th Rails version
      %td= Rails.version

    %tr
      %th Rack release
      %td= Rack.release

    - request.env['SERVER_SOFTWARE'].if_present do |server_software|
      %tr
        %th Server Software
        %td= server_software

    %tr
      %th Rails Environment
      %td= Rails.env

    %tr
      %th Quails Environment
      %td= Quails.env

    %tr
      %th Database software version
      %td= @pg_version

    %tr
      %th Collation / ctype
      %td
        = @collate["datcollate"]
        \/
        = @collate["datctype"]

    - ENV["DOCKER_IMAGE"].if_present do |docker_image|
      %tr
        %th Docker image
        %td= docker_image

    - ENV["BACKEND_COLOR"].if_present do |color|
      %tr
        %th Backend color (Active backend)
        %td= color

    - Quails.revision.if_present do |revision|
      %tr
        %th Revision
        %td
          = link_to revision.sha[0..7], "https://bitbucket.org/khustochka/quails/commits/#{revision.sha}"
          = simple_format(revision.message)

%h2 Env vars

%table.neat_table
  %tbody
    - ENV.keys.sort.each do |key|
      %tr
        %th= key
        %td
          - if [/secret/i, /passw/i, /_key/i, /token/i, /DATABASE_URL/i, /MYLOC/i].any? { |r| key =~ r }
            %span.new_sp *****
          - else
            = ENV[key]
