- @robots = 'NOINDEX, NOARCHIVE'
- javascript 'lifelist'

- @page_title = capture do
  - if params[:month]
    = [ t('lists.title.monthlist', month: t('date.month_names')[params[:month].to_i]),
        params[:year] ? t('lists.title.yearsublist', year: params[:year]) : nil,
        params[:locus] ? "(#{@lifelist.locus.name})" : nil ] * ' '
  - elsif params[:year]
    = [t('lists.title.yearlist', year: params[:year]), params[:locus] ? "(#{@lifelist.locus.name})" : nil] * ' '
  - elsif params[:locus]
    = t('lists.title.locationlist', location: @lifelist.locus.name)
  - else
    = t('lists.title.lifelist')

%h1= page_header

= render 'menus'

%ul.horiz-list.filter-list
  %strong= t('lists.menus.filter.months')
  %li= params[:month].nil? ? content_tag(:span, t('misc.all')) : link_to(t('misc.all'), params.merge(:month => nil))
  - 1.upto(12) do |m|
    %li
      = link_to_or_span(t('date.abbr_month_names')[m], params.merge(:month => m))

- if @lifelist.blank?
  %p No species
- else
  - sort = params[:sort]
  %table#lifelist.neat_table
    %tr
      %th &nbsp;
      %th
        Sort by:
        = link_to_unless_current('Classification ⇓', params.merge(:sort => 'class'))
      %th.align-right
        - if params[:sort].nil?
          First seen ⇓
        - else
          = link_to params.merge(:sort => nil) do
            First seen ⇓
      %th.align-right= link_to_unless_current('Last seen ⇓', params.merge(:sort => 'last'))
      %th.align-right= link_to_unless_current('Count ⇓', params.merge(:sort => 'count'))
    = render sort.nil? || sort == 'last' ? "lists/advanced/by_date" : "lists/advanced/by_#{sort}"
