name: Deploy
on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
      deploy_env:
        required: true
        type: string
    secrets:
      DEPLOY_SSH_KEY:
        required: true
      DEPLOY_SSH_HOST:
        required: true
      DEPLOY_TARGET_DIR:
        required: true

  workflow_dispatch:
    inputs:
      image_tag:
        type: string
        required: true
        description: "Image tag"
      deploy_env:
        required: true
        description: "Deployment environment"
        type: choice
        options:
          - staging
          - production
        default: staging

jobs:
  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    environment: ${{ inputs.deploy_env }}
    concurrency: ${{ inputs.deploy_env }}
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          ssh-keyscan -H bitbucket.org >> ~/.ssh/known_hosts
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
          echo "$SSH_KEY" > ~/.ssh/private.key
          chmod 600 ~/.ssh/private.key
          cat >>~/.ssh/config <<END
          Host deploy_target
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/private.key
            ControlMaster auto
            ControlPath ~/.ssh/control-%C
            ControlPersist yes
          Host bitbucket.org
            HostName bitbucket.org
            IdentityFile ~/.ssh/private.key
          END
        shell: bash
        env:
          SSH_HOST: ${{ secrets.DEPLOY_SSH_HOST }}
          SSH_USER: ${{ vars.DEPLOY_SSH_USER }}
          SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Checkout deployment scripts
        shell: bash
        run: |
          git clone --no-checkout --depth=1 --filter=tree:0 ${{ secrets.DEPLOY_SCRIPTS_REPO }} deploy-scripts
          cd deploy-scripts
          git sparse-checkout set --no-cone /quails
          git checkout

      - name: Run deployment script
        shell: bash
        run: docker --version
        # run: cd deploy-scripts/quails && ./deploy ${{ inputs.deploy_env }}
        env:
          DOCKER_IMAGE: ${{ inputs.image_tag }}
          DOCKER_HOST: ssh://${{ vars.DEPLOY_SSH_USER }}@${{ secrets.DEPLOY_SSH_HOST }}
