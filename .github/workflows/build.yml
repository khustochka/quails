name: "Build image"
on:
  workflow_call:
    inputs:
      platforms:
        type: string
    secrets:
      DOCKER_AWS_ACCESS_KEY_ID:
        required: true
      DOCKER_AWS_SECRET_ACCESS_KEY:
        required: true
  workflow_dispatch:
    inputs:
      platforms: 
        default: linux/amd64,linux/arm64
        required: true
        description: "Platforms to build for"
        type: choice
        options:
        - linux/amd64,linux/arm64
        - linux/amd64
        - linux/arm64
jobs:
  build_and_push:
    name: "Build and push"
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            public.ecr.aws/m7x1i1o0/quails-app
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value={{branch}}-latest,enable=${{ github.ref != format('refs/heads/{0}', 'main') && startsWith(github.ref, 'refs/heads/') }}
            type=raw,value={{tag}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=sha,prefix={{branch}}-,enable=${{ startsWith(github.ref, 'refs/heads/') }}
            type=sha,prefix={{tag}}-,enable=${{ startsWith(github.ref, 'refs/tags/') }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: public.ecr.aws
          username: ${{ secrets.DOCKER_AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.DOCKER_AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: us-east-1
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          # Path context is required for .dockerignore to work.
          context: .
          platforms: ${{ inputs.platforms }}
          build-args: |
            GIT_REVISION=${{ github.sha }}
            GIT_REPOSITORY_URL=${{ format('{0}/{1}', github.server_url, github.repository) }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
