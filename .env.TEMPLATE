# Depending on what you want to run, copy this file to .env.development.local, or .env.production
# and customize if necessary. For .env files load priority see https://github.com/bkeepers/dotenv

# Below is a list of env vars with their default values

# Puma env vars.
# =============

# They actually need to be available to Puma before the app is loaded, so they are in this file just for information.

# Number of puma threads to run
# RAILS_MAX_THREADS=8
# RAILS_MIN_THREADS= #default equal to RAILS_MAX_THREADS

# Number of puma workers to run
# WEB_CONCURRENCY=
# Default: 2 in production (clustered mode, see puma for details), 0 in development

# Port. Usually no need to change.
# PORT=3000


# Required env vars
# =================

# Secret key base, used to encrypt data. Required in production (app won't start, assets won't compile).
# In development and test this env var is ignored, instead a random key is generated and stored in tmp.
# Run `bin/rails secret` to generate one.
# SECRET_KEY_BASE=

# Database URL.
# In dev/test it is not required for default UNIX socket setup. But if you want to customize connection parameters,
# you can omit the DB name, e.g. postgres://myuser:mypass@localhost/. DB name will be taken from database.yml.
# DATABASE_URL=

# App mode config

# This env var defines some behaviours that mostly affect production environments. They usually help to
# distinguish REAL production from staging environments that are run as production.
# Value of this variable is a list of keys separated with a colon, e.g. live:ssl:no_hsts.
# QUAILS_ENV=
# The list of keys is as follows:
#   `live` - makes it REAL LIVE production (real emails are sent, production S3 used and so on)
#   `ssl` - if SSL should be forced (defaults to `true` on heroku and with puma-dev)
#   `no_hsts` - only relevant with "ssl", turns off HSTS (good for staging where you test SSL)

# Admin username and password

# For development and test environment password can be in plain text.
# Otherwise, generate password hash with `bin/rails r 'p BCrypt::Password.create("test")'`. Secret key base should be set.
# Because password hash contains $, it should be in single brackets ('').
# QUAILS_ADMIN_USERNAME=
# QUAILS_ADMIN_PASSWORD=''

# Redis used for cache and actioncable
# REDIS_CACHE_URL=

# MongoDB URL for deflicker
# MONGODB_URL=mongodb://localhost:27017/deflicker_production

# quails_image_host=
# quails_local_image_path=
# quails_temp_image_path=

# Airbrake/Errbit settings
# AIRBRAKE_HOST=
# AIRBRAKE_API_KEY=
# AIRBRAKE_PROJECT_ID= # unused for Errbit

# quails_google_cse=
# quails_facebook_app_id=
# quails_flickr_app_key=
# quails_flickr_app_secret=
# quails_google_maps_api_key=

# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=

# quails_analytics= # 'ga' or 'shynet'
# quails_ga_code=
# quails_shynet_host=
# quails_shynet_key=
